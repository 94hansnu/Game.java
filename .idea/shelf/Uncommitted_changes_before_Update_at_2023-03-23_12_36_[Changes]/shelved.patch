Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"dc9c0df7-6d03-47ec-a7c8-45c3e26a10ae\" name=\"Changes\" comment=\"Vet ej om jag är inloggad på min eller lizzies gh, men detta är av kelly.\">\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"Git.Merge.Settings\">\r\n    <option name=\"BRANCH\" value=\"origin/hehe\" />\r\n  </component>\r\n  <component name=\"Git.Rebase.Settings\">\r\n    <option name=\"NEW_BASE\" value=\"origin/main\" />\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"GitHubPullRequestSearchHistory\">{\r\n  &quot;lastFilter&quot;: {\r\n  }\r\n}</component>\r\n  <component name=\"MarkdownSettingsMigration\">\r\n    <option name=\"stateVersion\" value=\"1\" />\r\n  </component>\r\n  <component name=\"ProjectId\" id=\"2NHHKu9lecZHziXlyR6HRw8mtHG\" />\r\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\" />\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\">{\r\n  &quot;keyToString&quot;: {\r\n    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,\r\n    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;\r\n  }\r\n}</component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"dc9c0df7-6d03-47ec-a7c8-45c3e26a10ae\" name=\"Changes\" comment=\"\" />\r\n      <created>1679314026549</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1679314026549</updated>\r\n    </task>\r\n    <task id=\"LOCAL−00001\" summary=\"Nothing done, skrev en kommentar //Testing\">\r\n      <created>1679314106585</created>\r\n      <option name=\"number\" value=\"LOCAL−00001\" />\r\n      <option name=\"presentableId\" value=\"LOCAL−00001\" />\r\n      <updated>1679314106585</updated>\r\n    </task>\r\n    <option name=\"localTasksCounter\" value=\"2\" />\r\n    <servers />\r\n  </component>\r\n  <component name=\"Vcs.Log.Tabs.Properties\">\r\n    <option name=\"TAB_STATES\">\r\n      <map>\r\n        <entry key=\"MAIN\">\r\n          <value>\r\n            <State />\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n  </component>\r\n  <component name=\"VcsManagerConfiguration\">\r\n    <MESSAGE value=\"Nothing done\" />\r\n    <MESSAGE value=\"Nothing done, skrev en kommentar //Test\" />\r\n    <MESSAGE value=\"Nothing done, skrev en kommentar //Testing\" />\r\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"Nothing done, skrev en kommentar //Testing\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision 97154cfc326e0741e05e20d4bc8fae39616e109b)
+++ b/.idea/workspace.xml	(date 1679571313200)
@@ -7,6 +7,10 @@
     <list default="true" id="dc9c0df7-6d03-47ec-a7c8-45c3e26a10ae" name="Changes" comment="Vet ej om jag är inloggad på min eller lizzies gh, men detta är av kelly.">
       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
     </list>
+    <list default="true" id="dc9c0df7-6d03-47ec-a7c8-45c3e26a10ae" name="Changes" comment="Nothing done, skrev en kommentar //Testing">
+      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/Meny.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/Meny.java" afterDir="false" />
+    </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
     <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
@@ -34,6 +38,11 @@
     <option name="hideEmptyMiddlePackages" value="true" />
     <option name="showLibraryContents" value="true" />
   </component>
+  <component name="PropertiesComponent">{
+  &quot;keyToString&quot;: {
+    &quot;Git.Branch.Popup.ShowAllRemotes&quot;: &quot;true&quot;,
+    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,
+    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;
   <component name="PropertiesComponent">{
   &quot;keyToString&quot;: {
     &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,
Index: src/Game.java
===================================================================
diff --git a/src/Game.java b/src/Game.java
deleted file mode 100644
--- a/src/Game.java	(revision 97154cfc326e0741e05e20d4bc8fae39616e109b)
+++ /dev/null	(revision 97154cfc326e0741e05e20d4bc8fae39616e109b)
@@ -1,13 +0,0 @@
-public class Game {
-    public String name;
-    public Game(String name) {
-        this.name = name;
-        System.out.println("Jej?");
-
-        System.out.println(name);
-    }
-    public void startGame() {
-        System.out.println("Game started");
-        System.out.println(name + " this is working great");
-    }
-}
Index: src/Main.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>public class Main {\r\n    public static void main(String[] args) {\r\n\r\n\r\n        //Testing\r\n        System.out.println(\"Hello world!\");\r\n\r\n        Meny.allConnected();\r\n        Meny.afterShowOptions();\r\n        System.out.println(\"\\nHEJ\\n\");\r\n\r\n       // Meny.allConnected();\r\n       // Meny.showGameHeadMeny();\r\n       /* Meny.createNewGame();\r\n        Meny.showOptions();\r\n        Meny.goAdventuring();\r\n        String a = Meny.userChoise();\r\n\r\n        System.out.println(a);\r\n        Integer b = Meny.checkUserChoise(a);\r\n        System.out.println(b);\r\n        Meny.createNewGame();*/\r\n\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/Main.java b/src/Main.java
--- a/src/Main.java	(revision 97154cfc326e0741e05e20d4bc8fae39616e109b)
+++ b/src/Main.java	(date 1679571056388)
@@ -9,17 +9,5 @@
         Meny.afterShowOptions();
         System.out.println("\nHEJ\n");
 
-       // Meny.allConnected();
-       // Meny.showGameHeadMeny();
-       /* Meny.createNewGame();
-        Meny.showOptions();
-        Meny.goAdventuring();
-        String a = Meny.userChoise();
-
-        System.out.println(a);
-        Integer b = Meny.checkUserChoise(a);
-        System.out.println(b);
-        Meny.createNewGame();*/
-
     }
 }
\ No newline at end of file
Index: src/Meny.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>\r\nimport java.util.Scanner;\r\npublic class Meny {\r\n    public static Game game;\r\n    public static void createNewGame() {\r\n        game = new Game(userChoise());\r\n    }\r\n    public static void goAdventuring() { game.startGame(); }\r\n\r\n    public static void showCharacter() {\r\n        // Här bör det skrivas game.player.getName osv.\r\n        System.out.println();\r\n    }\r\n    public static void showShop() {\r\n        // Här bör det komma game.shop.showShop();\r\n    }\r\n    public static void exitGame() {\r\n        System.exit(0);\r\n    }\r\n    public static void afterShowOptions() {\r\n        Integer choise = checkUserChoise(userChoise());\r\n        while(choise == null) {\r\n            showOptions();\r\n            choise = checkUserChoise(userChoise());\r\n        }\r\n            switch (choise){\r\n\r\n            case 1 -> goAdventuring();\r\n            case 2 -> showCharacter();\r\n            case 3 -> showShop();\r\n            case 4 -> exitGame();\r\n                default -> System.out.println(\"Enter a number between 1-4.\");\r\n\r\n               /* case 1:\r\n                    goAdventuring();\r\n                    break;\r\n                case 2:\r\n                    showCharacter();\r\n                    break;\r\n                case 3:\r\n                    showShop();\r\n                case 4:\r\n                    exitGame();\r\n\r\n\r\n                default:\r\n                    System.out.println(\"Enter a number between 1-4.\");\r\n                    break;*/\r\n            }\r\n\r\n    }\r\n    public static void allConnected() {\r\n        showGameHeadMeny();\r\n        createNewGame();\r\n        showOptions();\r\n    }\r\n\r\n\r\n    public static void showGameHeadMeny() {\r\n        System.out.print(\"************************\"+\r\n                         \"\\n* Welcome to The Game  *\"+\r\n                         \"\\n************************\"+\r\n                         \"\\n* Enter your name: \");\r\n    }\r\n    public static void showOptions() {\r\n        System.out.print(\"\\n1. Go adventuring\\n2. Show details about your character\" +\r\n                \"\\n3. Go to shop\\n4. Exit game\\n> \");\r\n    }\r\n    public static String userChoise() {\r\n        Scanner scanner = new Scanner(System.in);\r\n\r\n        return scanner.next();\r\n    }\r\n    public static Integer checkUserChoise(String userChoise) {\r\n        int test = 0;\r\n        try {\r\n            test = Integer.valueOf(userChoise);\r\n            return test;\r\n        }\r\n        catch (NumberFormatException e) {\r\n            System.out.println(\"Don't try to enter letters or special characters.\");\r\n            return null;\r\n        }\r\n    }\r\n    // :)\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/Meny.java b/src/Meny.java
--- a/src/Meny.java	(revision 97154cfc326e0741e05e20d4bc8fae39616e109b)
+++ b/src/Meny.java	(date 1679571056390)
@@ -2,53 +2,56 @@
 import java.util.Scanner;
 public class Meny {
     public static Game game;
+
+    // Skapar nytt spel
     public static void createNewGame() {
+        // parametern i game bör förslagsvis vara att den tar emot en str player och att den sätts i game konstruktor till playerName.
         game = new Game(userChoise());
     }
+    // Fight börjar
     public static void goAdventuring() { game.startGame(); }
 
-    public static void showCharacter() {
+    // Visar egenskaper av spelaren
+    public static void showCharacterDetails() {
         // Här bör det skrivas game.player.getName osv.
         System.out.println();
     }
+    // Visar shop meny
     public static void showShop() {
         // Här bör det komma game.shop.showShop();
     }
-    public static void exitGame() {
+    // Avslutar spelet
+    static void exitGame() {
         System.exit(0);
     }
+
+    // Kontrollerar om användarens input är mellan 1-4. Om det stämmer körs ett av alternativen,
+    // annars kommer metoden loopas tills användaren skriver in korrekt.
     public static void afterShowOptions() {
-        Integer choise = checkUserChoise(userChoise());
-        while(choise == null) {
-            showOptions();
-            choise = checkUserChoise(userChoise());
-        }
-            switch (choise){
-
-            case 1 -> goAdventuring();
-            case 2 -> showCharacter();
-            case 3 -> showShop();
-            case 4 -> exitGame();
-                default -> System.out.println("Enter a number between 1-4.");
-
-               /* case 1:
-                    goAdventuring();
-                    break;
-                case 2:
-                    showCharacter();
-                    break;
-                case 3:
-                    showShop();
-                case 4:
-                    exitGame();
-
-
-                default:
-                    System.out.println("Enter a number between 1-4.");
-                    break;*/
+        Integer choise = whileWrongInput();
+            if (choise < 5 && choise > 0) {
+                switch (choise) {
+                    case 1 -> goAdventuring();
+                    case 2 -> showCharacterDetails();
+                    case 3 -> showShop();
+                    case 4 -> exitGame();
+                }
             }
-
+            else {
+                System.out.print("Enter a number between 1-4.\n> ");
+                afterShowOptions();
+            }
     }
+    // Låter användaren skriva in sitt val. Om val != int kommer loop köras. Return int.
+    static Integer whileWrongInput() {
+        Integer choise = checkUserChoise(userChoise());
+        while(choise == null) {
+            showOptions();
+            choise = checkUserChoise(userChoise());
+        }
+        return choise;
+    }
+    // Tror jag tar bort denna
     public static void allConnected() {
         showGameHeadMeny();
         createNewGame();
@@ -56,21 +59,25 @@
     }
 
 
+    // Visar det första som kommer upp när man startar programmet
     public static void showGameHeadMeny() {
         System.out.print("************************"+
                          "\n* Welcome to The Game  *"+
                          "\n************************"+
                          "\n* Enter your name: ");
     }
+    // Visar de fyra val användaren har
     public static void showOptions() {
         System.out.print("\n1. Go adventuring\n2. Show details about your character" +
                 "\n3. Go to shop\n4. Exit game\n> ");
     }
+    // Return användarens input. Används dels för att kontrollera om input är av korrekt format,
+    // samt att ta in användarens PlayerName
     public static String userChoise() {
         Scanner scanner = new Scanner(System.in);
-
         return scanner.next();
     }
+    // Kontrollerar om användarens input är av typ int
     public static Integer checkUserChoise(String userChoise) {
         int test = 0;
         try {
@@ -82,6 +89,4 @@
             return null;
         }
     }
-    // :)
-
 }
